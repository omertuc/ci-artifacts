---
- name: Search if the CI image exists
  command: oc get imagestreamtag -n "{{ build_operand_namespace }}" "{{ build_operand_imagestream_name }}:latest" -oname --ignore-not-found
  register: has_ci_image

- name: Build the CI image
  when: has_ci_image.stdout == ""
  block:
  - name: Delete any old image builder manifest
    command: oc delete -f "{{ build_operand_image_builder }}" --ignore-not-found

  - name: Apply the CI artifacts image builder manifest
    shell:
      set -o pipefail;
      cat "{{ build_operand_image_builder }}" \
       | sed 's|{{ '{{' }} build_operand_namespace {{ '}}' }}|{{ build_operand_namespace }}|' \
       | sed 's|{{ '{{' }} build_operand_git_repo {{ '}}' }}|{{ build_operand_git_repo }}|' \
       | sed 's|{{ '{{' }} build_operand_git_ref {{ '}}' }}|{{ build_operand_git_ref }}|' \
       | sed 's|{{ '{{' }} build_operand_imagestream_name {{ '}}' }}|{{ build_operand_imagestream_name }}|' \
       | oc apply -f-
    args:
      warn: false # don't warn about using sed here

  - name: Wait for the image to be built
    shell: oc logs -f "buildconfig/{{ build_operand_imagestream_name }}" -n "{{ build_operand_namespace }}" > /dev/null

- name: Ensure that the image exists
  command: oc get imagestreamtag -n "{{ build_operand_namespace }}" "{{ build_operand_imagestream_name }}:latest" -oname --ignore-not-found
